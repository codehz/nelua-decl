## cinclude '<pthread.h>'
## cflags '-pthread'
global timespec: type <cimport, nodecl, ctypedef> = @record{
  tv_sec: clong,
  tv_nsec: clong
}
global sched_param: type <cimport, nodecl, ctypedef> = @record{
  sched_priority: cint
}
global pthread_t: type = @culong
global pthread_mutexattr_t: type <cimport, nodecl> = @union{
  __size: [4]cchar,
  __align: cint
}
global pthread_condattr_t: type <cimport, nodecl> = @union{
  __size: [4]cchar,
  __align: cint
}
global pthread_attr_t: type <cimport, nodecl> = @union{
  __size: [56]cchar,
  __align: clong
}
global pthread_mutex_t: type <cimport, nodecl, cincomplete> = @union{
  __size: [40]cchar,
  __align: clong
}
global pthread_cond_t: type <cimport, nodecl, cincomplete> = @union{
  __size: [48]cchar,
  __align: clonglong
}
global pthread_rwlock_t: type <cimport, nodecl, cincomplete> = @union{
  __size: [56]cchar,
  __align: clong
}
global pthread_rwlockattr_t: type <cimport, nodecl> = @union{
  __size: [8]cchar,
  __align: clong
}
global pthread_barrier_t: type <cimport, nodecl> = @union{
  __size: [32]cchar,
  __align: clong
}
global pthread_barrierattr_t: type <cimport, nodecl> = @union{
  __size: [4]cchar,
  __align: cint
}
global function pthread_create(__newthread: *pthread_t, __attr: *pthread_attr_t, __start_routine: function(pointer): pointer, __arg: pointer): cint <cimport, nodecl> end
global function pthread_exit(__retval: pointer) <cimport, nodecl> end
global function pthread_join(__th: pthread_t, __thread_return: *pointer): cint <cimport, nodecl> end
global function pthread_detach(__th: pthread_t): cint <cimport, nodecl> end
global function pthread_self(): pthread_t <cimport, nodecl> end
global function pthread_equal(__thread1: pthread_t, __thread2: pthread_t): cint <cimport, nodecl> end
global function pthread_attr_init(__attr: *pthread_attr_t): cint <cimport, nodecl> end
global function pthread_attr_destroy(__attr: *pthread_attr_t): cint <cimport, nodecl> end
global function pthread_attr_getdetachstate(__attr: *pthread_attr_t, __detachstate: *cint): cint <cimport, nodecl> end
global function pthread_attr_setdetachstate(__attr: *pthread_attr_t, __detachstate: cint): cint <cimport, nodecl> end
global function pthread_attr_getguardsize(__attr: *pthread_attr_t, __guardsize: *csize): cint <cimport, nodecl> end
global function pthread_attr_setguardsize(__attr: *pthread_attr_t, __guardsize: csize): cint <cimport, nodecl> end
global function pthread_attr_getschedparam(__attr: *pthread_attr_t, __param: *sched_param): cint <cimport, nodecl> end
global function pthread_attr_setschedparam(__attr: *pthread_attr_t, __param: *sched_param): cint <cimport, nodecl> end
global function pthread_attr_getschedpolicy(__attr: *pthread_attr_t, __policy: *cint): cint <cimport, nodecl> end
global function pthread_attr_setschedpolicy(__attr: *pthread_attr_t, __policy: cint): cint <cimport, nodecl> end
global function pthread_attr_getinheritsched(__attr: *pthread_attr_t, __inherit: *cint): cint <cimport, nodecl> end
global function pthread_attr_setinheritsched(__attr: *pthread_attr_t, __inherit: cint): cint <cimport, nodecl> end
global function pthread_attr_getscope(__attr: *pthread_attr_t, __scope: *cint): cint <cimport, nodecl> end
global function pthread_attr_setscope(__attr: *pthread_attr_t, __scope: cint): cint <cimport, nodecl> end
global function pthread_attr_getstackaddr(__attr: *pthread_attr_t, __stackaddr: *pointer): cint <cimport, nodecl> end
global function pthread_attr_setstackaddr(__attr: *pthread_attr_t, __stackaddr: pointer): cint <cimport, nodecl> end
global function pthread_attr_getstacksize(__attr: *pthread_attr_t, __stacksize: *csize): cint <cimport, nodecl> end
global function pthread_attr_setstacksize(__attr: *pthread_attr_t, __stacksize: csize): cint <cimport, nodecl> end
global function pthread_attr_getstack(__attr: *pthread_attr_t, __stackaddr: *pointer, __stacksize: *csize): cint <cimport, nodecl> end
global function pthread_attr_setstack(__attr: *pthread_attr_t, __stackaddr: pointer, __stacksize: csize): cint <cimport, nodecl> end
global function pthread_setschedparam(__target_thread: pthread_t, __policy: cint, __param: *sched_param): cint <cimport, nodecl> end
global function pthread_getschedparam(__target_thread: pthread_t, __policy: *cint, __param: *sched_param): cint <cimport, nodecl> end
global function pthread_setschedprio(__target_thread: pthread_t, __prio: cint): cint <cimport, nodecl> end
global function pthread_once(__once_control: *cint, __init_routine: function()): cint <cimport, nodecl> end
global function pthread_setcancelstate(__state: cint, __oldstate: *cint): cint <cimport, nodecl> end
global function pthread_setcanceltype(__type: cint, __oldtype: *cint): cint <cimport, nodecl> end
global function pthread_cancel(__th: pthread_t): cint <cimport, nodecl> end
global function pthread_testcancel() <cimport, nodecl> end
global function pthread_mutex_init(__mutex: *pthread_mutex_t, __mutexattr: *pthread_mutexattr_t): cint <cimport, nodecl> end
global function pthread_mutex_destroy(__mutex: *pthread_mutex_t): cint <cimport, nodecl> end
global function pthread_mutex_trylock(__mutex: *pthread_mutex_t): cint <cimport, nodecl> end
global function pthread_mutex_lock(__mutex: *pthread_mutex_t): cint <cimport, nodecl> end
global function pthread_mutex_timedlock(__mutex: *pthread_mutex_t, __abstime: *timespec): cint <cimport, nodecl> end
global function pthread_mutex_unlock(__mutex: *pthread_mutex_t): cint <cimport, nodecl> end
global function pthread_mutex_getprioceiling(__mutex: *pthread_mutex_t, __prioceiling: *cint): cint <cimport, nodecl> end
global function pthread_mutex_setprioceiling(__mutex: *pthread_mutex_t, __prioceiling: cint, __old_ceiling: *cint): cint <cimport, nodecl> end
global function pthread_mutex_consistent(__mutex: *pthread_mutex_t): cint <cimport, nodecl> end
global function pthread_mutexattr_init(__attr: *pthread_mutexattr_t): cint <cimport, nodecl> end
global function pthread_mutexattr_destroy(__attr: *pthread_mutexattr_t): cint <cimport, nodecl> end
global function pthread_mutexattr_getpshared(__attr: *pthread_mutexattr_t, __pshared: *cint): cint <cimport, nodecl> end
global function pthread_mutexattr_setpshared(__attr: *pthread_mutexattr_t, __pshared: cint): cint <cimport, nodecl> end
global function pthread_mutexattr_gettype(__attr: *pthread_mutexattr_t, __kind: *cint): cint <cimport, nodecl> end
global function pthread_mutexattr_settype(__attr: *pthread_mutexattr_t, __kind: cint): cint <cimport, nodecl> end
global function pthread_mutexattr_getprotocol(__attr: *pthread_mutexattr_t, __protocol: *cint): cint <cimport, nodecl> end
global function pthread_mutexattr_setprotocol(__attr: *pthread_mutexattr_t, __protocol: cint): cint <cimport, nodecl> end
global function pthread_mutexattr_getprioceiling(__attr: *pthread_mutexattr_t, __prioceiling: *cint): cint <cimport, nodecl> end
global function pthread_mutexattr_setprioceiling(__attr: *pthread_mutexattr_t, __prioceiling: cint): cint <cimport, nodecl> end
global function pthread_mutexattr_getrobust(__attr: *pthread_mutexattr_t, __robustness: *cint): cint <cimport, nodecl> end
global function pthread_mutexattr_setrobust(__attr: *pthread_mutexattr_t, __robustness: cint): cint <cimport, nodecl> end
global function pthread_rwlock_init(__rwlock: *pthread_rwlock_t, __attr: *pthread_rwlockattr_t): cint <cimport, nodecl> end
global function pthread_rwlock_destroy(__rwlock: *pthread_rwlock_t): cint <cimport, nodecl> end
global function pthread_rwlock_rdlock(__rwlock: *pthread_rwlock_t): cint <cimport, nodecl> end
global function pthread_rwlock_tryrdlock(__rwlock: *pthread_rwlock_t): cint <cimport, nodecl> end
global function pthread_rwlock_timedrdlock(__rwlock: *pthread_rwlock_t, __abstime: *timespec): cint <cimport, nodecl> end
global function pthread_rwlock_wrlock(__rwlock: *pthread_rwlock_t): cint <cimport, nodecl> end
global function pthread_rwlock_trywrlock(__rwlock: *pthread_rwlock_t): cint <cimport, nodecl> end
global function pthread_rwlock_timedwrlock(__rwlock: *pthread_rwlock_t, __abstime: *timespec): cint <cimport, nodecl> end
global function pthread_rwlock_unlock(__rwlock: *pthread_rwlock_t): cint <cimport, nodecl> end
global function pthread_rwlockattr_init(__attr: *pthread_rwlockattr_t): cint <cimport, nodecl> end
global function pthread_rwlockattr_destroy(__attr: *pthread_rwlockattr_t): cint <cimport, nodecl> end
global function pthread_rwlockattr_getpshared(__attr: *pthread_rwlockattr_t, __pshared: *cint): cint <cimport, nodecl> end
global function pthread_rwlockattr_setpshared(__attr: *pthread_rwlockattr_t, __pshared: cint): cint <cimport, nodecl> end
global function pthread_rwlockattr_getkind_np(__attr: *pthread_rwlockattr_t, __pref: *cint): cint <cimport, nodecl> end
global function pthread_rwlockattr_setkind_np(__attr: *pthread_rwlockattr_t, __pref: cint): cint <cimport, nodecl> end
global function pthread_cond_init(__cond: *pthread_cond_t, __cond_attr: *pthread_condattr_t): cint <cimport, nodecl> end
global function pthread_cond_destroy(__cond: *pthread_cond_t): cint <cimport, nodecl> end
global function pthread_cond_signal(__cond: *pthread_cond_t): cint <cimport, nodecl> end
global function pthread_cond_broadcast(__cond: *pthread_cond_t): cint <cimport, nodecl> end
global function pthread_cond_wait(__cond: *pthread_cond_t, __mutex: *pthread_mutex_t): cint <cimport, nodecl> end
global function pthread_cond_timedwait(__cond: *pthread_cond_t, __mutex: *pthread_mutex_t, __abstime: *timespec): cint <cimport, nodecl> end
global function pthread_condattr_init(__attr: *pthread_condattr_t): cint <cimport, nodecl> end
global function pthread_condattr_destroy(__attr: *pthread_condattr_t): cint <cimport, nodecl> end
global function pthread_condattr_getpshared(__attr: *pthread_condattr_t, __pshared: *cint): cint <cimport, nodecl> end
global function pthread_condattr_setpshared(__attr: *pthread_condattr_t, __pshared: cint): cint <cimport, nodecl> end
global function pthread_condattr_getclock(__attr: *pthread_condattr_t, __clock_id: *cint): cint <cimport, nodecl> end
global function pthread_condattr_setclock(__attr: *pthread_condattr_t, __clock_id: cint): cint <cimport, nodecl> end
global function pthread_spin_init(__lock: *cint, __pshared: cint): cint <cimport, nodecl> end
global function pthread_spin_destroy(__lock: *cint): cint <cimport, nodecl> end
global function pthread_spin_lock(__lock: *cint): cint <cimport, nodecl> end
global function pthread_spin_trylock(__lock: *cint): cint <cimport, nodecl> end
global function pthread_spin_unlock(__lock: *cint): cint <cimport, nodecl> end
global function pthread_barrier_init(__barrier: *pthread_barrier_t, __attr: *pthread_barrierattr_t, __count: cuint): cint <cimport, nodecl> end
global function pthread_barrier_destroy(__barrier: *pthread_barrier_t): cint <cimport, nodecl> end
global function pthread_barrier_wait(__barrier: *pthread_barrier_t): cint <cimport, nodecl> end
global function pthread_barrierattr_init(__attr: *pthread_barrierattr_t): cint <cimport, nodecl> end
global function pthread_barrierattr_destroy(__attr: *pthread_barrierattr_t): cint <cimport, nodecl> end
global function pthread_barrierattr_getpshared(__attr: *pthread_barrierattr_t, __pshared: *cint): cint <cimport, nodecl> end
global function pthread_barrierattr_setpshared(__attr: *pthread_barrierattr_t, __pshared: cint): cint <cimport, nodecl> end
global function pthread_key_create(__key: *cuint, __destr_function: function(pointer)): cint <cimport, nodecl> end
global function pthread_key_delete(__key: cuint): cint <cimport, nodecl> end
global function pthread_getspecific(__key: cuint): pointer <cimport, nodecl> end
global function pthread_setspecific(__key: cuint, __pointer: pointer): cint <cimport, nodecl> end
global function pthread_getcpuclockid(__thread_id: pthread_t, __clock_id: *cint): cint <cimport, nodecl> end
global function pthread_atfork(__prepare: function(), __parent: function(), __child: function()): cint <cimport, nodecl> end
